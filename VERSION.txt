Version 0.2.8
 - KeyUtils.transformFromLong(toConvert, keySize): key sizes less than 8 bytes are handled correctly
 
Version 0.2.7
 - SyncManager: correcting a spelling error within comment
 
Version 0.2.6
 -SyncManager: the SyncManager thread sleeps for 1 milliseconds for each iteration -> reduces CPU load a lot
 
Version 0.2.5
 - SyncThread: now all exceptions will be catched and the bucket id will be released so that 
               the bucket can be synchronized again

Version 0.2.4
 - SDRUM Iterator: Bug fix because empty files were not be respected
 - RangeHashFunction: method getBucketIdsFor(prefix): DOESN'T WORK CORRECTLY IF ALL THE
                      RANGES HAS THE SAME PREFIX AND THIS PREFIX IS SEARCHED FOR.
                      
Version 0.2.3
 - RangeHashFunction: Bug fix within getBucketIdsFor(prefix), handles border correctly
 
Version 0.2.2
 - SyncManager: Bug fix of the threshold when to write the bucket to disk
 
 Version 0.2.1
  - no important things happened
 
Version 0.2.0
 - SyncManager: Added a threshold to the SynManager. If a bucket reaches the threshold
                then the bucket can be synchronized. If the threshold is not reaches
                the bucket is not synchronized. So we prevent unnecessary write operations.
 
Version 0.1.13
 - RangeHashFunction: adding new method that returns all bucketIds for specific prefix 
 
Version 0.1.12
  - KeyUtils: adding new method "startsWith" to examine whether the key array begins
              with another byte array

Version 0.1.11
  - only new version number to denote a stable version
  
Version 0.1.11-SNAPSHOT
 - new feature: RangeHashFunction: getting all ranges

Version 0.1.10-SNAPSHOT
 - new feature: SDRUM_API: new method "storeasNewConfigFile" to store the configuration file 
 - new feature: BucketSplitting: can split a bucket to several ones (package "bucket")
 
Version 0.1.9-SNAPSHOT
 - Bug fix: BucketConainer: While adding a new element it was possible that another
                            thread access the bucket in parallel and want to add
                            one more element that the bucket should have. This
                            lead to a ArrayOutOfBoundException.

Version 0.1.8-SNAPSHOT
 - SyncManager: after synchronizing all buckets it is tried to empty the pre queue.
                This was not done before so that the elements within the pre queue
                was synchronized if the pre queue was full or if the the sdrum was
                shut down.
 - UpdateOnlySynchronizer: the first chunk from a HeaderIndexFile could not be updated
    - 
Version 0.1.7-SNAPSHOT
 - BucketContainer: unnecessary exception were removed from the moveElementsFromWaitingQueue
                    method.

Version 0.1.3-SNAPSHOT
  - Some bugs were fixed (shutdown, inconsistency)
  
Version 0.1.2-SNAPSHOT
  - the key is now represented by an array of bytes
  
Version 0.1.1-SNAPSHOT
  - refinement of the API
  - the size of the bucket is now configurable by the AbstractHashFunction 
  
Version 0.1.0-SNAPSHOT
  - The file storage was split into a base, named SDRUM, and the classes for the CrawlingFrontier
  - RangeHashFunction was added: takes the function values from a file

Version 0.0.18
  - Bug fix at the UrlFile (while url is written to the database the length was computed incorrectly)

Version 0.0.17 (Development version)

Version 0.0.16
  - There remain 5 temporary url files while working. The other files will be deleted.

Version 0.0.15
  - LinkData was adapted to need less memory in memory and hdd
     * the relevance score is stroed in a byte
     * the timestamp is stored in an integer (it represents the minutes till 2011/08/02)
  - Adding UrlFile class
     * it handles the access on files that stores url
     * the format is /length url length url .../
     
Version 0.0.14
  - adding JMX support for the UrlRepository
     * Buffer: number of active threads, maximal number of threads
     * UrlTempStorage: number of urls that were appended to temporary storage
     * BucketContainer: number of elements lying in the pre queue

Version 0.0.9
   - the structure of the DBFile was changed (it is HeaderFile)

Version 0.0.8
   - temporary url storage uses DBFile, the files enlarges by a specified factor